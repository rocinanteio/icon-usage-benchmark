{
  "resolvedId": "/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/template/lib/populate.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\nvar _t = require(\"@babel/types\");\nconst {\n  blockStatement,\n  cloneNode,\n  emptyStatement,\n  expressionStatement,\n  identifier,\n  isStatement,\n  isStringLiteral,\n  stringLiteral,\n  validate\n} = _t;\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = cloneNode(metadata.ast);\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = cloneNode(replacement);\n    }\n  }\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = stringLiteral(replacement);\n    }\n    if (!replacement || !isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = expressionStatement(identifier(replacement));\n      } else if (!isStatement(replacement)) {\n        replacement = expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = identifier(replacement);\n        }\n        if (!isStatement(replacement)) {\n          replacement = expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = identifier(replacement);\n    }\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = identifier(replacement);\n    }\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n  function set(parent, key, value) {\n    const node = parent[key];\n    parent[key] = value;\n    if (node.type === \"Identifier\") {\n      if (node.typeAnnotation) {\n        value.typeAnnotation = node.typeAnnotation;\n      }\n      if (node.optional) {\n        value.optional = node.optional;\n      }\n      if (node.decorators) {\n        value.decorators = node.decorators;\n      }\n    }\n  }\n  if (index === undefined) {\n    validate(parent, key, replacement);\n    set(parent, key, replacement);\n  } else {\n    const items = parent[key].slice();\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        set(items, index, replacement);\n      }\n    } else {\n      set(items, index, replacement);\n    }\n    validate(parent, key, items);\n    parent[key] = items;\n  }\n}\n\n//# sourceMappingURL=populate.js.map\n",
      "start": 1727785257192,
      "end": 1727785257234,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1727785257234,
      "end": 1727785257234,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1727785257234,
      "end": 1727785257234,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1727785257234,
      "end": 1727785257234,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1727785257234,
      "end": 1727785257234,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1727785257234,
      "end": 1727785257234,
      "order": "normal"
    },
    {
      "name": "vite-plugin-commonjs",
      "start": 1727785257234,
      "end": 1727785257234,
      "order": "normal"
    },
    {
      "name": "optimus-bundle",
      "start": 1727785257234,
      "end": 1727785257234,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1727785257234,
      "end": 1727785257234,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1727785257234,
      "end": 1727785257234,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1727785257234,
      "end": 1727785257234,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1727785257234,
      "end": 1727785257234,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1727785257234,
      "end": 1727785257234,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as populate } from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/template/lib/populate.js?commonjs-exports\";\nimport { __require as require$$0 } from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/types/lib/index.js?commonjs-wrapped\";\n\n\"use strict\";\n\nObject.defineProperty(populate, \"__esModule\", {\n  value: true\n});\nvar _default = populate.default = populatePlaceholders;\nvar _t = require$$0();\nconst {\n  blockStatement,\n  cloneNode,\n  emptyStatement,\n  expressionStatement,\n  identifier,\n  isStatement,\n  isStringLiteral,\n  stringLiteral,\n  validate\n} = _t;\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = cloneNode(metadata.ast);\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = cloneNode(replacement);\n    }\n  }\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = stringLiteral(replacement);\n    }\n    if (!replacement || !isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = expressionStatement(identifier(replacement));\n      } else if (!isStatement(replacement)) {\n        replacement = expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = identifier(replacement);\n        }\n        if (!isStatement(replacement)) {\n          replacement = expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = identifier(replacement);\n    }\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = identifier(replacement);\n    }\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n  function set(parent, key, value) {\n    const node = parent[key];\n    parent[key] = value;\n    if (node.type === \"Identifier\") {\n      if (node.typeAnnotation) {\n        value.typeAnnotation = node.typeAnnotation;\n      }\n      if (node.optional) {\n        value.optional = node.optional;\n      }\n      if (node.decorators) {\n        value.decorators = node.decorators;\n      }\n    }\n  }\n  if (index === undefined) {\n    validate(parent, key, replacement);\n    set(parent, key, replacement);\n  } else {\n    const items = parent[key].slice();\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        set(items, index, replacement);\n      }\n    } else {\n      set(items, index, replacement);\n    }\n    validate(parent, key, items);\n    parent[key] = items;\n  }\n}\n\n//# sourceMappingURL=populate.js.map\n\nexport { populate as __moduleExports, _default as default };",
      "start": 1727785257234,
      "end": 1727785257235,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1727785257235,
      "end": 1727785257235,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1727785257235,
      "end": 1727785257235,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1727785257235,
      "end": 1727785257235,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1727785257235,
      "end": 1727785257235,
      "order": "normal"
    }
  ]
}
