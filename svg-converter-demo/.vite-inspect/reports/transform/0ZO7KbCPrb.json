{
  "resolvedId": "/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/template/lib/literal.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\nvar _options = require(\"./options.js\");\nvar _parse = require(\"./parse.js\");\nvar _populate = require(\"./populate.js\");\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\nfunction buildLiteralData(formatter, tpl, opts) {\n  let prefix = \"BABEL_TPL$\";\n  const raw = tpl.join(\"\");\n  do {\n    prefix = \"$$\" + prefix;\n  } while (raw.includes(prefix));\n  const {\n    names,\n    code\n  } = buildTemplateCode(tpl, prefix);\n  const metadata = (0, _parse.default)(formatter, formatter.code(code), {\n    parser: opts.parser,\n    placeholderWhitelist: new Set(names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n    placeholderPattern: opts.placeholderPattern,\n    preserveComments: opts.preserveComments,\n    syntacticPlaceholders: opts.syntacticPlaceholders\n  });\n  return {\n    metadata,\n    names\n  };\n}\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n  return {\n    names,\n    code\n  };\n}\n\n//# sourceMappingURL=literal.js.map\n",
      "start": 1727785257140,
      "end": 1727785257193,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1727785257193,
      "end": 1727785257193,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1727785257193,
      "end": 1727785257193,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1727785257193,
      "end": 1727785257193,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1727785257193,
      "end": 1727785257193,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1727785257193,
      "end": 1727785257193,
      "order": "normal"
    },
    {
      "name": "vite-plugin-commonjs",
      "start": 1727785257193,
      "end": 1727785257193,
      "order": "normal"
    },
    {
      "name": "optimus-bundle",
      "start": 1727785257193,
      "end": 1727785257193,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1727785257193,
      "end": 1727785257193,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1727785257193,
      "end": 1727785257193,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1727785257193,
      "end": 1727785257193,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1727785257193,
      "end": 1727785257193,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1727785257193,
      "end": 1727785257193,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as literal } from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/template/lib/literal.js?commonjs-exports\";\nimport require$$0 from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/template/lib/options.js?commonjs-proxy\";\nimport require$$1 from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/template/lib/parse.js?commonjs-proxy\";\nimport require$$2 from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/template/lib/populate.js?commonjs-proxy\";\n\n\"use strict\";\n\nObject.defineProperty(literal, \"__esModule\", {\n  value: true\n});\nvar _default = literal.default = literalTemplate;\nvar _options = require$$0;\nvar _parse = require$$1;\nvar _populate = require$$2;\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\nfunction buildLiteralData(formatter, tpl, opts) {\n  let prefix = \"BABEL_TPL$\";\n  const raw = tpl.join(\"\");\n  do {\n    prefix = \"$$\" + prefix;\n  } while (raw.includes(prefix));\n  const {\n    names,\n    code\n  } = buildTemplateCode(tpl, prefix);\n  const metadata = (0, _parse.default)(formatter, formatter.code(code), {\n    parser: opts.parser,\n    placeholderWhitelist: new Set(names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n    placeholderPattern: opts.placeholderPattern,\n    preserveComments: opts.preserveComments,\n    syntacticPlaceholders: opts.syntacticPlaceholders\n  });\n  return {\n    metadata,\n    names\n  };\n}\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n  return {\n    names,\n    code\n  };\n}\n\n//# sourceMappingURL=literal.js.map\n\nexport { literal as __moduleExports, _default as default };",
      "start": 1727785257193,
      "end": 1727785257397,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1727785257397,
      "end": 1727785257397,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1727785257397,
      "end": 1727785257397,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1727785257397,
      "end": 1727785257397,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1727785257397,
      "end": 1727785257397,
      "order": "normal"
    }
  ]
}
