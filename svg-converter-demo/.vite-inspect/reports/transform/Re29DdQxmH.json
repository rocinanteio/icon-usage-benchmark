{
  "resolvedId": "/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/traverse/lib/path/lib/virtual-types-validator.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isBindingIdentifier = isBindingIdentifier;\nexports.isBlockScoped = isBlockScoped;\nexports.isExpression = isExpression;\nexports.isFlow = isFlow;\nexports.isForAwaitStatement = isForAwaitStatement;\nexports.isGenerated = isGenerated;\nexports.isPure = isPure;\nexports.isReferenced = isReferenced;\nexports.isReferencedIdentifier = isReferencedIdentifier;\nexports.isReferencedMemberExpression = isReferencedMemberExpression;\nexports.isRestProperty = isRestProperty;\nexports.isScope = isScope;\nexports.isSpreadProperty = isSpreadProperty;\nexports.isStatement = isStatement;\nexports.isUser = isUser;\nexports.isVar = isVar;\nvar _t = require(\"@babel/types\");\nconst {\n  isBinding,\n  isBlockScoped: nodeIsBlockScoped,\n  isExportDeclaration,\n  isExpression: nodeIsExpression,\n  isFlow: nodeIsFlow,\n  isForStatement,\n  isForXStatement,\n  isIdentifier,\n  isImportDeclaration,\n  isImportSpecifier,\n  isJSXIdentifier,\n  isJSXMemberExpression,\n  isMemberExpression,\n  isRestElement: nodeIsRestElement,\n  isReferenced: nodeIsReferenced,\n  isScope: nodeIsScope,\n  isStatement: nodeIsStatement,\n  isVar: nodeIsVar,\n  isVariableDeclaration,\n  react,\n  isForOfStatement\n} = _t;\nconst {\n  isCompatTag\n} = react;\nfunction isReferencedIdentifier(opts) {\n  const {\n    node,\n    parent\n  } = this;\n  if (!isIdentifier(node, opts) && !isJSXMemberExpression(parent, opts)) {\n    if (isJSXIdentifier(node, opts)) {\n      if (isCompatTag(node.name)) return false;\n    } else {\n      return false;\n    }\n  }\n  return nodeIsReferenced(node, parent, this.parentPath.parent);\n}\nfunction isReferencedMemberExpression() {\n  const {\n    node,\n    parent\n  } = this;\n  return isMemberExpression(node) && nodeIsReferenced(node, parent);\n}\nfunction isBindingIdentifier() {\n  const {\n    node,\n    parent\n  } = this;\n  const grandparent = this.parentPath.parent;\n  return isIdentifier(node) && isBinding(node, parent, grandparent);\n}\nfunction isStatement() {\n  const {\n    node,\n    parent\n  } = this;\n  if (nodeIsStatement(node)) {\n    if (isVariableDeclaration(node)) {\n      if (isForXStatement(parent, {\n        left: node\n      })) return false;\n      if (isForStatement(parent, {\n        init: node\n      })) return false;\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction isExpression() {\n  if (this.isIdentifier()) {\n    return this.isReferencedIdentifier();\n  } else {\n    return nodeIsExpression(this.node);\n  }\n}\nfunction isScope() {\n  return nodeIsScope(this.node, this.parent);\n}\nfunction isReferenced() {\n  return nodeIsReferenced(this.node, this.parent);\n}\nfunction isBlockScoped() {\n  return nodeIsBlockScoped(this.node);\n}\nfunction isVar() {\n  return nodeIsVar(this.node);\n}\nfunction isUser() {\n  return this.node && !!this.node.loc;\n}\nfunction isGenerated() {\n  return !this.isUser();\n}\nfunction isPure(constantsOnly) {\n  return this.scope.isPure(this.node, constantsOnly);\n}\nfunction isFlow() {\n  const {\n    node\n  } = this;\n  if (nodeIsFlow(node)) {\n    return true;\n  } else if (isImportDeclaration(node)) {\n    return node.importKind === \"type\" || node.importKind === \"typeof\";\n  } else if (isExportDeclaration(node)) {\n    return node.exportKind === \"type\";\n  } else if (isImportSpecifier(node)) {\n    return node.importKind === \"type\" || node.importKind === \"typeof\";\n  } else {\n    return false;\n  }\n}\nfunction isRestProperty() {\n  var _this$parentPath;\n  return nodeIsRestElement(this.node) && ((_this$parentPath = this.parentPath) == null ? void 0 : _this$parentPath.isObjectPattern());\n}\nfunction isSpreadProperty() {\n  var _this$parentPath2;\n  return nodeIsRestElement(this.node) && ((_this$parentPath2 = this.parentPath) == null ? void 0 : _this$parentPath2.isObjectExpression());\n}\nfunction isForAwaitStatement() {\n  return isForOfStatement(this.node, {\n    await: true\n  });\n}\n{\n  exports.isExistentialTypeParam = function isExistentialTypeParam() {\n    throw new Error(\"`path.isExistentialTypeParam` has been renamed to `path.isExistsTypeAnnotation()` in Babel 7.\");\n  };\n  exports.isNumericLiteralTypeAnnotation = function isNumericLiteralTypeAnnotation() {\n    throw new Error(\"`path.isNumericLiteralTypeAnnotation()` has been renamed to `path.isNumberLiteralTypeAnnotation()` in Babel 7.\");\n  };\n}\n\n//# sourceMappingURL=virtual-types-validator.js.map\n",
      "start": 1728160680973,
      "end": 1728160681053,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1728160681053,
      "end": 1728160681053,
      "order": "pre"
    },
    {
      "name": "optimus-bundle",
      "start": 1728160681053,
      "end": 1728160681053,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1728160681053,
      "end": 1728160681053,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1728160681054,
      "end": 1728160681054,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1728160681054,
      "end": 1728160681054,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1728160681054,
      "end": 1728160681054,
      "order": "normal"
    },
    {
      "name": "vite-plugin-commonjs",
      "start": 1728160681054,
      "end": 1728160681054,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1728160681054,
      "end": 1728160681054,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1728160681054,
      "end": 1728160681054,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1728160681054,
      "end": 1728160681054,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1728160681054,
      "end": 1728160681054,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1728160681054,
      "end": 1728160681054,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as virtualTypesValidator } from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/traverse/lib/path/lib/virtual-types-validator.js?commonjs-exports\";\nimport { __require as require$$0 } from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/types/lib/index.js?commonjs-wrapped\";\n\nvar isNumericLiteralTypeAnnotation;\nvar isExistentialTypeParam;\n\"use strict\";\n\nObject.defineProperty(virtualTypesValidator, \"__esModule\", {\n  value: true\n});\nvar isBindingIdentifier_1 = virtualTypesValidator.isBindingIdentifier = isBindingIdentifier;\nvar isBlockScoped_1 = virtualTypesValidator.isBlockScoped = isBlockScoped;\nvar isExpression_1 = virtualTypesValidator.isExpression = isExpression;\nvar isFlow_1 = virtualTypesValidator.isFlow = isFlow;\nvar isForAwaitStatement_1 = virtualTypesValidator.isForAwaitStatement = isForAwaitStatement;\nvar isGenerated_1 = virtualTypesValidator.isGenerated = isGenerated;\nvar isPure_1 = virtualTypesValidator.isPure = isPure;\nvar isReferenced_1 = virtualTypesValidator.isReferenced = isReferenced;\nvar isReferencedIdentifier_1 = virtualTypesValidator.isReferencedIdentifier = isReferencedIdentifier;\nvar isReferencedMemberExpression_1 = virtualTypesValidator.isReferencedMemberExpression = isReferencedMemberExpression;\nvar isRestProperty_1 = virtualTypesValidator.isRestProperty = isRestProperty;\nvar isScope_1 = virtualTypesValidator.isScope = isScope;\nvar isSpreadProperty_1 = virtualTypesValidator.isSpreadProperty = isSpreadProperty;\nvar isStatement_1 = virtualTypesValidator.isStatement = isStatement;\nvar isUser_1 = virtualTypesValidator.isUser = isUser;\nvar isVar_1 = virtualTypesValidator.isVar = isVar;\nvar _t = require$$0();\nconst {\n  isBinding,\n  isBlockScoped: nodeIsBlockScoped,\n  isExportDeclaration,\n  isExpression: nodeIsExpression,\n  isFlow: nodeIsFlow,\n  isForStatement,\n  isForXStatement,\n  isIdentifier,\n  isImportDeclaration,\n  isImportSpecifier,\n  isJSXIdentifier,\n  isJSXMemberExpression,\n  isMemberExpression,\n  isRestElement: nodeIsRestElement,\n  isReferenced: nodeIsReferenced,\n  isScope: nodeIsScope,\n  isStatement: nodeIsStatement,\n  isVar: nodeIsVar,\n  isVariableDeclaration,\n  react,\n  isForOfStatement\n} = _t;\nconst {\n  isCompatTag\n} = react;\nfunction isReferencedIdentifier(opts) {\n  const {\n    node,\n    parent\n  } = this;\n  if (!isIdentifier(node, opts) && !isJSXMemberExpression(parent, opts)) {\n    if (isJSXIdentifier(node, opts)) {\n      if (isCompatTag(node.name)) return false;\n    } else {\n      return false;\n    }\n  }\n  return nodeIsReferenced(node, parent, this.parentPath.parent);\n}\nfunction isReferencedMemberExpression() {\n  const {\n    node,\n    parent\n  } = this;\n  return isMemberExpression(node) && nodeIsReferenced(node, parent);\n}\nfunction isBindingIdentifier() {\n  const {\n    node,\n    parent\n  } = this;\n  const grandparent = this.parentPath.parent;\n  return isIdentifier(node) && isBinding(node, parent, grandparent);\n}\nfunction isStatement() {\n  const {\n    node,\n    parent\n  } = this;\n  if (nodeIsStatement(node)) {\n    if (isVariableDeclaration(node)) {\n      if (isForXStatement(parent, {\n        left: node\n      })) return false;\n      if (isForStatement(parent, {\n        init: node\n      })) return false;\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction isExpression() {\n  if (this.isIdentifier()) {\n    return this.isReferencedIdentifier();\n  } else {\n    return nodeIsExpression(this.node);\n  }\n}\nfunction isScope() {\n  return nodeIsScope(this.node, this.parent);\n}\nfunction isReferenced() {\n  return nodeIsReferenced(this.node, this.parent);\n}\nfunction isBlockScoped() {\n  return nodeIsBlockScoped(this.node);\n}\nfunction isVar() {\n  return nodeIsVar(this.node);\n}\nfunction isUser() {\n  return this.node && !!this.node.loc;\n}\nfunction isGenerated() {\n  return !this.isUser();\n}\nfunction isPure(constantsOnly) {\n  return this.scope.isPure(this.node, constantsOnly);\n}\nfunction isFlow() {\n  const {\n    node\n  } = this;\n  if (nodeIsFlow(node)) {\n    return true;\n  } else if (isImportDeclaration(node)) {\n    return node.importKind === \"type\" || node.importKind === \"typeof\";\n  } else if (isExportDeclaration(node)) {\n    return node.exportKind === \"type\";\n  } else if (isImportSpecifier(node)) {\n    return node.importKind === \"type\" || node.importKind === \"typeof\";\n  } else {\n    return false;\n  }\n}\nfunction isRestProperty() {\n  var _this$parentPath;\n  return nodeIsRestElement(this.node) && ((_this$parentPath = this.parentPath) == null ? void 0 : _this$parentPath.isObjectPattern());\n}\nfunction isSpreadProperty() {\n  var _this$parentPath2;\n  return nodeIsRestElement(this.node) && ((_this$parentPath2 = this.parentPath) == null ? void 0 : _this$parentPath2.isObjectExpression());\n}\nfunction isForAwaitStatement() {\n  return isForOfStatement(this.node, {\n    await: true\n  });\n}\n{\n  isExistentialTypeParam = virtualTypesValidator.isExistentialTypeParam = function isExistentialTypeParam() {\n    throw new Error(\"`path.isExistentialTypeParam` has been renamed to `path.isExistsTypeAnnotation()` in Babel 7.\");\n  };\n  isNumericLiteralTypeAnnotation = virtualTypesValidator.isNumericLiteralTypeAnnotation = function isNumericLiteralTypeAnnotation() {\n    throw new Error(\"`path.isNumericLiteralTypeAnnotation()` has been renamed to `path.isNumberLiteralTypeAnnotation()` in Babel 7.\");\n  };\n}\n\n//# sourceMappingURL=virtual-types-validator.js.map\n\nexport { virtualTypesValidator as __moduleExports, isBindingIdentifier_1 as isBindingIdentifier, isBlockScoped_1 as isBlockScoped, isExpression_1 as isExpression, isFlow_1 as isFlow, isForAwaitStatement_1 as isForAwaitStatement, isGenerated_1 as isGenerated, isPure_1 as isPure, isReferenced_1 as isReferenced, isReferencedIdentifier_1 as isReferencedIdentifier, isReferencedMemberExpression_1 as isReferencedMemberExpression, isRestProperty_1 as isRestProperty, isScope_1 as isScope, isSpreadProperty_1 as isSpreadProperty, isStatement_1 as isStatement, isUser_1 as isUser, isVar_1 as isVar, isExistentialTypeParam, isNumericLiteralTypeAnnotation, virtualTypesValidator as default };",
      "start": 1728160681054,
      "end": 1728160681055,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "inject",
      "start": 1728160681055,
      "end": 1728160681055,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1728160681055,
      "end": 1728160681055,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1728160681055,
      "end": 1728160681055,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1728160681055,
      "end": 1728160681055,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1728160681055,
      "end": 1728160681055,
      "order": "normal"
    }
  ]
}
