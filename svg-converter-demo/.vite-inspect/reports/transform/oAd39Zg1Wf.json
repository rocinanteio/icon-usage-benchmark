{
  "resolvedId": "/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/color-convert/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n",
      "start": 1727785257366,
      "end": 1727785257371,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1727785257372,
      "end": 1727785257372,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1727785257372,
      "end": 1727785257372,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1727785257372,
      "end": 1727785257372,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1727785257372,
      "end": 1727785257372,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1727785257372,
      "end": 1727785257372,
      "order": "normal"
    },
    {
      "name": "vite-plugin-commonjs",
      "start": 1727785257372,
      "end": 1727785257372,
      "order": "normal"
    },
    {
      "name": "optimus-bundle",
      "start": 1727785257372,
      "end": 1727785257372,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1727785257372,
      "end": 1727785257372,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1727785257372,
      "end": 1727785257372,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1727785257372,
      "end": 1727785257372,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1727785257372,
      "end": 1727785257372,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1727785257372,
      "end": 1727785257372,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __require as require$$0 } from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/color-convert/conversions.js?commonjs-wrapped\";\nimport { __require as require$$1 } from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/color-convert/route.js?commonjs-wrapped\";\n\nvar colorConvert;\nvar hasRequiredColorConvert;\n\nfunction requireColorConvert () {\n\tif (hasRequiredColorConvert) return colorConvert;\n\thasRequiredColorConvert = 1;\n\tvar conversions = require$$0();\n\tvar route = require$$1();\n\n\tvar convert = {};\n\n\tvar models = Object.keys(conversions);\n\n\tfunction wrapRaw(fn) {\n\t\tvar wrappedFn = function (args) {\n\t\t\tif (args === undefined || args === null) {\n\t\t\t\treturn args;\n\t\t\t}\n\n\t\t\tif (arguments.length > 1) {\n\t\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t\t}\n\n\t\t\treturn fn(args);\n\t\t};\n\n\t\t// preserve .conversion property if there is one\n\t\tif ('conversion' in fn) {\n\t\t\twrappedFn.conversion = fn.conversion;\n\t\t}\n\n\t\treturn wrappedFn;\n\t}\n\n\tfunction wrapRounded(fn) {\n\t\tvar wrappedFn = function (args) {\n\t\t\tif (args === undefined || args === null) {\n\t\t\t\treturn args;\n\t\t\t}\n\n\t\t\tif (arguments.length > 1) {\n\t\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t\t}\n\n\t\t\tvar result = fn(args);\n\n\t\t\t// we're assuming the result is an array here.\n\t\t\t// see notice in conversions.js; don't use box types\n\t\t\t// in conversion functions.\n\t\t\tif (typeof result === 'object') {\n\t\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\t// preserve .conversion property if there is one\n\t\tif ('conversion' in fn) {\n\t\t\twrappedFn.conversion = fn.conversion;\n\t\t}\n\n\t\treturn wrappedFn;\n\t}\n\n\tmodels.forEach(function (fromModel) {\n\t\tconvert[fromModel] = {};\n\n\t\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\t\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\t\tvar routes = route(fromModel);\n\t\tvar routeModels = Object.keys(routes);\n\n\t\trouteModels.forEach(function (toModel) {\n\t\t\tvar fn = routes[toModel];\n\n\t\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t\t});\n\t});\n\n\tcolorConvert = convert;\n\treturn colorConvert;\n}\n\nexport { requireColorConvert as __require };",
      "start": 1727785257372,
      "end": 1727785257391,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1727785257391,
      "end": 1727785257391,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1727785257391,
      "end": 1727785257391,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1727785257391,
      "end": 1727785257391,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1727785257391,
      "end": 1727785257391,
      "order": "normal"
    }
  ]
}
