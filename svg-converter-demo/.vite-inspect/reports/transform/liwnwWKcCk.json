{
  "resolvedId": "/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/traverse/lib/scope/lib/renamer.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar t = require(\"@babel/types\");\nvar _t = t;\nvar _traverseNode = require(\"../../traverse-node.js\");\nvar _visitors = require(\"../../visitors.js\");\nvar _context = require(\"../../path/context.js\");\nconst {\n  getAssignmentIdentifiers\n} = _t;\nconst renameVisitor = {\n  ReferencedIdentifier({\n    node\n  }, state) {\n    if (node.name === state.oldName) {\n      node.name = state.newName;\n    }\n  },\n  Scope(path, state) {\n    if (!path.scope.bindingIdentifierEquals(state.oldName, state.binding.identifier)) {\n      path.skip();\n      if (path.isMethod()) {\n        if (!path.requeueComputedKeyAndDecorators) {\n          _context.requeueComputedKeyAndDecorators.call(path);\n        } else {\n          path.requeueComputedKeyAndDecorators();\n        }\n      }\n    }\n  },\n  ObjectProperty({\n    node,\n    scope\n  }, state) {\n    const {\n      name\n    } = node.key;\n    if (node.shorthand && (name === state.oldName || name === state.newName) && scope.getBindingIdentifier(name) === state.binding.identifier) {\n      node.shorthand = false;\n      {\n        var _node$extra;\n        if ((_node$extra = node.extra) != null && _node$extra.shorthand) node.extra.shorthand = false;\n      }\n    }\n  },\n  \"AssignmentExpression|Declaration|VariableDeclarator\"(path, state) {\n    if (path.isVariableDeclaration()) return;\n    const ids = path.isAssignmentExpression() ? getAssignmentIdentifiers(path.node) : path.getOuterBindingIdentifiers();\n    for (const name in ids) {\n      if (name === state.oldName) ids[name].name = state.newName;\n    }\n  }\n};\nclass Renamer {\n  constructor(binding, oldName, newName) {\n    this.newName = newName;\n    this.oldName = oldName;\n    this.binding = binding;\n  }\n  maybeConvertFromExportDeclaration(parentDeclar) {\n    const maybeExportDeclar = parentDeclar.parentPath;\n    if (!maybeExportDeclar.isExportDeclaration()) {\n      return;\n    }\n    if (maybeExportDeclar.isExportDefaultDeclaration()) {\n      const {\n        declaration\n      } = maybeExportDeclar.node;\n      if (t.isDeclaration(declaration) && !declaration.id) {\n        return;\n      }\n    }\n    if (maybeExportDeclar.isExportAllDeclaration()) {\n      return;\n    }\n    maybeExportDeclar.splitExportDeclaration();\n  }\n  maybeConvertFromClassFunctionDeclaration(path) {\n    return path;\n  }\n  maybeConvertFromClassFunctionExpression(path) {\n    return path;\n  }\n  rename() {\n    const {\n      binding,\n      oldName,\n      newName\n    } = this;\n    const {\n      scope,\n      path\n    } = binding;\n    const parentDeclar = path.find(path => path.isDeclaration() || path.isFunctionExpression() || path.isClassExpression());\n    if (parentDeclar) {\n      const bindingIds = parentDeclar.getOuterBindingIdentifiers();\n      if (bindingIds[oldName] === binding.identifier) {\n        this.maybeConvertFromExportDeclaration(parentDeclar);\n      }\n    }\n    const blockToTraverse = arguments[0] || scope.block;\n    const skipKeys = {\n      discriminant: true\n    };\n    if (t.isMethod(blockToTraverse)) {\n      if (blockToTraverse.computed) {\n        skipKeys.key = true;\n      }\n      if (!t.isObjectMethod(blockToTraverse)) {\n        skipKeys.decorators = true;\n      }\n    }\n    (0, _traverseNode.traverseNode)(blockToTraverse, (0, _visitors.explode)(renameVisitor), scope, this, scope.path, skipKeys);\n    if (!arguments[0]) {\n      scope.removeOwnBinding(oldName);\n      scope.bindings[newName] = binding;\n      this.binding.identifier.name = newName;\n    }\n    if (parentDeclar) {\n      this.maybeConvertFromClassFunctionDeclaration(path);\n      this.maybeConvertFromClassFunctionExpression(path);\n    }\n  }\n}\nexports.default = Renamer;\n\n//# sourceMappingURL=renamer.js.map\n",
      "start": 1727785256939,
      "end": 1727785257031,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1727785257031,
      "end": 1727785257031,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1727785257031,
      "end": 1727785257031,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1727785257031,
      "end": 1727785257031,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1727785257031,
      "end": 1727785257031,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1727785257031,
      "end": 1727785257031,
      "order": "normal"
    },
    {
      "name": "vite-plugin-commonjs",
      "start": 1727785257031,
      "end": 1727785257031,
      "order": "normal"
    },
    {
      "name": "optimus-bundle",
      "start": 1727785257031,
      "end": 1727785257031,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1727785257031,
      "end": 1727785257031,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1727785257031,
      "end": 1727785257031,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1727785257031,
      "end": 1727785257031,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1727785257031,
      "end": 1727785257031,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1727785257031,
      "end": 1727785257031,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as renamer } from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/traverse/lib/scope/lib/renamer.js?commonjs-exports\";\nimport { __require as require$$0 } from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/types/lib/index.js?commonjs-wrapped\";\nimport { __require as require$$1 } from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/traverse/lib/traverse-node.js?commonjs-wrapped\";\nimport { __require as require$$2 } from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/traverse/lib/visitors.js?commonjs-wrapped\";\nimport { __require as require$$3 } from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/traverse/lib/path/context.js?commonjs-wrapped\";\n\nvar hasRequiredRenamer;\n\nfunction requireRenamer () {\n\tif (hasRequiredRenamer) return renamer;\n\thasRequiredRenamer = 1;\n\t\"use strict\";\n\n\tObject.defineProperty(renamer, \"__esModule\", {\n\t  value: true\n\t});\n\trenamer.default = void 0;\n\tvar t = require$$0();\n\tvar _t = t;\n\tvar _traverseNode = require$$1();\n\tvar _visitors = require$$2();\n\tvar _context = require$$3();\n\tconst {\n\t  getAssignmentIdentifiers\n\t} = _t;\n\tconst renameVisitor = {\n\t  ReferencedIdentifier({\n\t    node\n\t  }, state) {\n\t    if (node.name === state.oldName) {\n\t      node.name = state.newName;\n\t    }\n\t  },\n\t  Scope(path, state) {\n\t    if (!path.scope.bindingIdentifierEquals(state.oldName, state.binding.identifier)) {\n\t      path.skip();\n\t      if (path.isMethod()) {\n\t        if (!path.requeueComputedKeyAndDecorators) {\n\t          _context.requeueComputedKeyAndDecorators.call(path);\n\t        } else {\n\t          path.requeueComputedKeyAndDecorators();\n\t        }\n\t      }\n\t    }\n\t  },\n\t  ObjectProperty({\n\t    node,\n\t    scope\n\t  }, state) {\n\t    const {\n\t      name\n\t    } = node.key;\n\t    if (node.shorthand && (name === state.oldName || name === state.newName) && scope.getBindingIdentifier(name) === state.binding.identifier) {\n\t      node.shorthand = false;\n\t      {\n\t        var _node$extra;\n\t        if ((_node$extra = node.extra) != null && _node$extra.shorthand) node.extra.shorthand = false;\n\t      }\n\t    }\n\t  },\n\t  \"AssignmentExpression|Declaration|VariableDeclarator\"(path, state) {\n\t    if (path.isVariableDeclaration()) return;\n\t    const ids = path.isAssignmentExpression() ? getAssignmentIdentifiers(path.node) : path.getOuterBindingIdentifiers();\n\t    for (const name in ids) {\n\t      if (name === state.oldName) ids[name].name = state.newName;\n\t    }\n\t  }\n\t};\n\tclass Renamer {\n\t  constructor(binding, oldName, newName) {\n\t    this.newName = newName;\n\t    this.oldName = oldName;\n\t    this.binding = binding;\n\t  }\n\t  maybeConvertFromExportDeclaration(parentDeclar) {\n\t    const maybeExportDeclar = parentDeclar.parentPath;\n\t    if (!maybeExportDeclar.isExportDeclaration()) {\n\t      return;\n\t    }\n\t    if (maybeExportDeclar.isExportDefaultDeclaration()) {\n\t      const {\n\t        declaration\n\t      } = maybeExportDeclar.node;\n\t      if (t.isDeclaration(declaration) && !declaration.id) {\n\t        return;\n\t      }\n\t    }\n\t    if (maybeExportDeclar.isExportAllDeclaration()) {\n\t      return;\n\t    }\n\t    maybeExportDeclar.splitExportDeclaration();\n\t  }\n\t  maybeConvertFromClassFunctionDeclaration(path) {\n\t    return path;\n\t  }\n\t  maybeConvertFromClassFunctionExpression(path) {\n\t    return path;\n\t  }\n\t  rename() {\n\t    const {\n\t      binding,\n\t      oldName,\n\t      newName\n\t    } = this;\n\t    const {\n\t      scope,\n\t      path\n\t    } = binding;\n\t    const parentDeclar = path.find(path => path.isDeclaration() || path.isFunctionExpression() || path.isClassExpression());\n\t    if (parentDeclar) {\n\t      const bindingIds = parentDeclar.getOuterBindingIdentifiers();\n\t      if (bindingIds[oldName] === binding.identifier) {\n\t        this.maybeConvertFromExportDeclaration(parentDeclar);\n\t      }\n\t    }\n\t    const blockToTraverse = arguments[0] || scope.block;\n\t    const skipKeys = {\n\t      discriminant: true\n\t    };\n\t    if (t.isMethod(blockToTraverse)) {\n\t      if (blockToTraverse.computed) {\n\t        skipKeys.key = true;\n\t      }\n\t      if (!t.isObjectMethod(blockToTraverse)) {\n\t        skipKeys.decorators = true;\n\t      }\n\t    }\n\t    (0, _traverseNode.traverseNode)(blockToTraverse, (0, _visitors.explode)(renameVisitor), scope, this, scope.path, skipKeys);\n\t    if (!arguments[0]) {\n\t      scope.removeOwnBinding(oldName);\n\t      scope.bindings[newName] = binding;\n\t      this.binding.identifier.name = newName;\n\t    }\n\t    if (parentDeclar) {\n\t      this.maybeConvertFromClassFunctionDeclaration(path);\n\t      this.maybeConvertFromClassFunctionExpression(path);\n\t    }\n\t  }\n\t}\n\trenamer.default = Renamer;\n\n\t//# sourceMappingURL=renamer.js.map\n\treturn renamer;\n}\n\nexport { requireRenamer as __require };",
      "start": 1727785257031,
      "end": 1727785257032,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1727785257032,
      "end": 1727785257032,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1727785257032,
      "end": 1727785257032,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1727785257032,
      "end": 1727785257032,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1727785257032,
      "end": 1727785257032,
      "order": "normal"
    }
  ]
}
