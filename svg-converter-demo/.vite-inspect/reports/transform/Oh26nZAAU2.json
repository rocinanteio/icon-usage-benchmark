{
  "resolvedId": "/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/axios/lib/helpers/resolveConfig.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n",
      "start": 1728160681781,
      "end": 1728160681899,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1728160681899,
      "end": 1728160681899,
      "order": "pre"
    },
    {
      "name": "optimus-bundle",
      "start": 1728160681899,
      "end": 1728160681899,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1728160681899,
      "end": 1728160681899,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1728160681899,
      "end": 1728160681899,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1728160681899,
      "end": 1728160681899,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1728160681899,
      "end": 1728160681899,
      "order": "normal"
    },
    {
      "name": "vite-plugin-commonjs",
      "start": 1728160681899,
      "end": 1728160681899,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1728160681899,
      "end": 1728160681899,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1728160681899,
      "end": 1728160681899,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1728160681899,
      "end": 1728160681900,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1728160681900,
      "end": 1728160681900,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1728160681900,
      "end": 1728160681900,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1728160681900,
      "end": 1728160681900,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1728160681900,
      "end": 1728160681900,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1728160681900,
      "end": 1728160681900,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1728160681900,
      "end": 1728160681900,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1728160681900,
      "end": 1728160681900,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1728160681900,
      "end": 1728160681900,
      "order": "normal"
    }
  ]
}
