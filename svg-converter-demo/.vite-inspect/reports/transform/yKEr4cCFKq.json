{
  "resolvedId": "/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/traverse/lib/path/replacement.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._replaceWith = _replaceWith;\nexports.replaceExpressionWithStatements = replaceExpressionWithStatements;\nexports.replaceInline = replaceInline;\nexports.replaceWith = replaceWith;\nexports.replaceWithMultiple = replaceWithMultiple;\nexports.replaceWithSourceString = replaceWithSourceString;\nvar _codeFrame = require(\"@babel/code-frame\");\nvar _index = require(\"../index.js\");\nvar _index2 = require(\"./index.js\");\nvar _cache = require(\"../cache.js\");\nvar _modification = require(\"./modification.js\");\nvar _parser = require(\"@babel/parser\");\nvar _t = require(\"@babel/types\");\nvar _context = require(\"./context.js\");\nconst {\n  FUNCTION_TYPES,\n  arrowFunctionExpression,\n  assignmentExpression,\n  awaitExpression,\n  blockStatement,\n  buildUndefinedNode,\n  callExpression,\n  cloneNode,\n  conditionalExpression,\n  expressionStatement,\n  getBindingIdentifiers,\n  identifier,\n  inheritLeadingComments,\n  inheritTrailingComments,\n  inheritsComments,\n  isBlockStatement,\n  isEmptyStatement,\n  isExpression,\n  isExpressionStatement,\n  isIfStatement,\n  isProgram,\n  isStatement,\n  isVariableDeclaration,\n  removeComments,\n  returnStatement,\n  sequenceExpression,\n  validate,\n  yieldExpression\n} = _t;\nfunction replaceWithMultiple(nodes) {\n  var _getCachedPaths;\n  _context.resync.call(this);\n  nodes = _modification._verifyNodeList.call(this, nodes);\n  inheritLeadingComments(nodes[0], this.node);\n  inheritTrailingComments(nodes[nodes.length - 1], this.node);\n  (_getCachedPaths = (0, _cache.getCachedPaths)(this.hub, this.parent)) == null || _getCachedPaths.delete(this.node);\n  this.node = this.container[this.key] = null;\n  const paths = this.insertAfter(nodes);\n  if (this.node) {\n    this.requeue();\n  } else {\n    this.remove();\n  }\n  return paths;\n}\nfunction replaceWithSourceString(replacement) {\n  _context.resync.call(this);\n  let ast;\n  try {\n    replacement = `(${replacement})`;\n    ast = (0, _parser.parse)(replacement);\n  } catch (err) {\n    const loc = err.loc;\n    if (loc) {\n      err.message += \" - make sure this is an expression.\\n\" + (0, _codeFrame.codeFrameColumns)(replacement, {\n        start: {\n          line: loc.line,\n          column: loc.column + 1\n        }\n      });\n      err.code = \"BABEL_REPLACE_SOURCE_ERROR\";\n    }\n    throw err;\n  }\n  const expressionAST = ast.program.body[0].expression;\n  _index.default.removeProperties(expressionAST);\n  return this.replaceWith(expressionAST);\n}\nfunction replaceWith(replacementPath) {\n  _context.resync.call(this);\n  if (this.removed) {\n    throw new Error(\"You can't replace this node, we've already removed it\");\n  }\n  let replacement = replacementPath instanceof _index2.default ? replacementPath.node : replacementPath;\n  if (!replacement) {\n    throw new Error(\"You passed `path.replaceWith()` a falsy node, use `path.remove()` instead\");\n  }\n  if (this.node === replacement) {\n    return [this];\n  }\n  if (this.isProgram() && !isProgram(replacement)) {\n    throw new Error(\"You can only replace a Program root node with another Program node\");\n  }\n  if (Array.isArray(replacement)) {\n    throw new Error(\"Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`\");\n  }\n  if (typeof replacement === \"string\") {\n    throw new Error(\"Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`\");\n  }\n  let nodePath = \"\";\n  if (this.isNodeType(\"Statement\") && isExpression(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement) && !this.parentPath.isExportDefaultDeclaration()) {\n      replacement = expressionStatement(replacement);\n      nodePath = \"expression\";\n    }\n  }\n  if (this.isNodeType(\"Expression\") && isStatement(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement)) {\n      return this.replaceExpressionWithStatements([replacement]);\n    }\n  }\n  const oldNode = this.node;\n  if (oldNode) {\n    inheritsComments(replacement, oldNode);\n    removeComments(oldNode);\n  }\n  _replaceWith.call(this, replacement);\n  this.type = replacement.type;\n  _context.setScope.call(this);\n  this.requeue();\n  return [nodePath ? this.get(nodePath) : this];\n}\nfunction _replaceWith(node) {\n  var _getCachedPaths2;\n  if (!this.container) {\n    throw new ReferenceError(\"Container is falsy\");\n  }\n  if (this.inList) {\n    validate(this.parent, this.key, [node]);\n  } else {\n    validate(this.parent, this.key, node);\n  }\n  this.debug(`Replace with ${node == null ? void 0 : node.type}`);\n  (_getCachedPaths2 = (0, _cache.getCachedPaths)(this.hub, this.parent)) == null || _getCachedPaths2.set(node, this).delete(this.node);\n  this.node = this.container[this.key] = node;\n}\nfunction replaceExpressionWithStatements(nodes) {\n  _context.resync.call(this);\n  const declars = [];\n  const nodesAsSingleExpression = gatherSequenceExpressions(nodes, declars);\n  if (nodesAsSingleExpression) {\n    for (const id of declars) this.scope.push({\n      id\n    });\n    return this.replaceWith(nodesAsSingleExpression)[0].get(\"expressions\");\n  }\n  const functionParent = this.getFunctionParent();\n  const isParentAsync = functionParent == null ? void 0 : functionParent.node.async;\n  const isParentGenerator = functionParent == null ? void 0 : functionParent.node.generator;\n  const container = arrowFunctionExpression([], blockStatement(nodes));\n  this.replaceWith(callExpression(container, []));\n  const callee = this.get(\"callee\");\n  callee.get(\"body\").scope.hoistVariables(id => this.scope.push({\n    id\n  }));\n  const completionRecords = callee.getCompletionRecords();\n  for (const path of completionRecords) {\n    if (!path.isExpressionStatement()) continue;\n    const loop = path.findParent(path => path.isLoop());\n    if (loop) {\n      let uid = loop.getData(\"expressionReplacementReturnUid\");\n      if (!uid) {\n        uid = callee.scope.generateDeclaredUidIdentifier(\"ret\");\n        callee.get(\"body\").pushContainer(\"body\", returnStatement(cloneNode(uid)));\n        loop.setData(\"expressionReplacementReturnUid\", uid);\n      } else {\n        uid = identifier(uid.name);\n      }\n      path.get(\"expression\").replaceWith(assignmentExpression(\"=\", cloneNode(uid), path.node.expression));\n    } else {\n      path.replaceWith(returnStatement(path.node.expression));\n    }\n  }\n  callee.arrowFunctionToExpression();\n  const newCallee = callee;\n  const needToAwaitFunction = isParentAsync && _index.default.hasType(this.get(\"callee.body\").node, \"AwaitExpression\", FUNCTION_TYPES);\n  const needToYieldFunction = isParentGenerator && _index.default.hasType(this.get(\"callee.body\").node, \"YieldExpression\", FUNCTION_TYPES);\n  if (needToAwaitFunction) {\n    newCallee.set(\"async\", true);\n    if (!needToYieldFunction) {\n      this.replaceWith(awaitExpression(this.node));\n    }\n  }\n  if (needToYieldFunction) {\n    newCallee.set(\"generator\", true);\n    this.replaceWith(yieldExpression(this.node, true));\n  }\n  return newCallee.get(\"body.body\");\n}\nfunction gatherSequenceExpressions(nodes, declars) {\n  const exprs = [];\n  let ensureLastUndefined = true;\n  for (const node of nodes) {\n    if (!isEmptyStatement(node)) {\n      ensureLastUndefined = false;\n    }\n    if (isExpression(node)) {\n      exprs.push(node);\n    } else if (isExpressionStatement(node)) {\n      exprs.push(node.expression);\n    } else if (isVariableDeclaration(node)) {\n      if (node.kind !== \"var\") return;\n      for (const declar of node.declarations) {\n        const bindings = getBindingIdentifiers(declar);\n        for (const key of Object.keys(bindings)) {\n          declars.push(cloneNode(bindings[key]));\n        }\n        if (declar.init) {\n          exprs.push(assignmentExpression(\"=\", declar.id, declar.init));\n        }\n      }\n      ensureLastUndefined = true;\n    } else if (isIfStatement(node)) {\n      const consequent = node.consequent ? gatherSequenceExpressions([node.consequent], declars) : buildUndefinedNode();\n      const alternate = node.alternate ? gatherSequenceExpressions([node.alternate], declars) : buildUndefinedNode();\n      if (!consequent || !alternate) return;\n      exprs.push(conditionalExpression(node.test, consequent, alternate));\n    } else if (isBlockStatement(node)) {\n      const body = gatherSequenceExpressions(node.body, declars);\n      if (!body) return;\n      exprs.push(body);\n    } else if (isEmptyStatement(node)) {\n      if (nodes.indexOf(node) === 0) {\n        ensureLastUndefined = true;\n      }\n    } else {\n      return;\n    }\n  }\n  if (ensureLastUndefined) exprs.push(buildUndefinedNode());\n  if (exprs.length === 1) {\n    return exprs[0];\n  } else {\n    return sequenceExpression(exprs);\n  }\n}\nfunction replaceInline(nodes) {\n  _context.resync.call(this);\n  if (Array.isArray(nodes)) {\n    if (Array.isArray(this.container)) {\n      nodes = _modification._verifyNodeList.call(this, nodes);\n      const paths = _modification._containerInsertAfter.call(this, nodes);\n      this.remove();\n      return paths;\n    } else {\n      return this.replaceWithMultiple(nodes);\n    }\n  } else {\n    return this.replaceWith(nodes);\n  }\n}\n\n//# sourceMappingURL=replacement.js.map\n",
      "start": 1728160681035,
      "end": 1728160681164,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1728160681164,
      "end": 1728160681164,
      "order": "pre"
    },
    {
      "name": "optimus-bundle",
      "start": 1728160681164,
      "end": 1728160681164,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1728160681164,
      "end": 1728160681164,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1728160681164,
      "end": 1728160681164,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1728160681164,
      "end": 1728160681164,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1728160681164,
      "end": 1728160681164,
      "order": "normal"
    },
    {
      "name": "vite-plugin-commonjs",
      "start": 1728160681164,
      "end": 1728160681164,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1728160681164,
      "end": 1728160681164,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1728160681164,
      "end": 1728160681165,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1728160681165,
      "end": 1728160681165,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1728160681165,
      "end": 1728160681165,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1728160681165,
      "end": 1728160681165,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as replacement } from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/traverse/lib/path/replacement.js?commonjs-exports\";\nimport require$$0 from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/code-frame/lib/index.js?commonjs-proxy\";\nimport { __require as require$$1 } from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/traverse/lib/index.js?commonjs-wrapped\";\nimport { __require as require$$2 } from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/traverse/lib/path/index.js?commonjs-wrapped\";\nimport require$$3 from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/traverse/lib/cache.js?commonjs-proxy\";\nimport { __require as require$$4 } from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/traverse/lib/path/modification.js?commonjs-wrapped\";\nimport require$$5 from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/parser/lib/index.js?commonjs-proxy\";\nimport { __require as require$$6 } from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/types/lib/index.js?commonjs-wrapped\";\nimport { __require as require$$7 } from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/traverse/lib/path/context.js?commonjs-wrapped\";\n\nvar hasRequiredReplacement;\n\nfunction requireReplacement () {\n\tif (hasRequiredReplacement) return replacement;\n\thasRequiredReplacement = 1;\n\t\"use strict\";\n\n\tObject.defineProperty(replacement, \"__esModule\", {\n\t  value: true\n\t});\n\treplacement._replaceWith = _replaceWith;\n\treplacement.replaceExpressionWithStatements = replaceExpressionWithStatements;\n\treplacement.replaceInline = replaceInline;\n\treplacement.replaceWith = replaceWith;\n\treplacement.replaceWithMultiple = replaceWithMultiple;\n\treplacement.replaceWithSourceString = replaceWithSourceString;\n\tvar _codeFrame = require$$0;\n\tvar _index = require$$1();\n\tvar _index2 = require$$2();\n\tvar _cache = require$$3;\n\tvar _modification = require$$4();\n\tvar _parser = require$$5;\n\tvar _t = require$$6();\n\tvar _context = require$$7();\n\tconst {\n\t  FUNCTION_TYPES,\n\t  arrowFunctionExpression,\n\t  assignmentExpression,\n\t  awaitExpression,\n\t  blockStatement,\n\t  buildUndefinedNode,\n\t  callExpression,\n\t  cloneNode,\n\t  conditionalExpression,\n\t  expressionStatement,\n\t  getBindingIdentifiers,\n\t  identifier,\n\t  inheritLeadingComments,\n\t  inheritTrailingComments,\n\t  inheritsComments,\n\t  isBlockStatement,\n\t  isEmptyStatement,\n\t  isExpression,\n\t  isExpressionStatement,\n\t  isIfStatement,\n\t  isProgram,\n\t  isStatement,\n\t  isVariableDeclaration,\n\t  removeComments,\n\t  returnStatement,\n\t  sequenceExpression,\n\t  validate,\n\t  yieldExpression\n\t} = _t;\n\tfunction replaceWithMultiple(nodes) {\n\t  var _getCachedPaths;\n\t  _context.resync.call(this);\n\t  nodes = _modification._verifyNodeList.call(this, nodes);\n\t  inheritLeadingComments(nodes[0], this.node);\n\t  inheritTrailingComments(nodes[nodes.length - 1], this.node);\n\t  (_getCachedPaths = (0, _cache.getCachedPaths)(this.hub, this.parent)) == null || _getCachedPaths.delete(this.node);\n\t  this.node = this.container[this.key] = null;\n\t  const paths = this.insertAfter(nodes);\n\t  if (this.node) {\n\t    this.requeue();\n\t  } else {\n\t    this.remove();\n\t  }\n\t  return paths;\n\t}\n\tfunction replaceWithSourceString(replacement) {\n\t  _context.resync.call(this);\n\t  let ast;\n\t  try {\n\t    replacement = `(${replacement})`;\n\t    ast = (0, _parser.parse)(replacement);\n\t  } catch (err) {\n\t    const loc = err.loc;\n\t    if (loc) {\n\t      err.message += \" - make sure this is an expression.\\n\" + (0, _codeFrame.codeFrameColumns)(replacement, {\n\t        start: {\n\t          line: loc.line,\n\t          column: loc.column + 1\n\t        }\n\t      });\n\t      err.code = \"BABEL_REPLACE_SOURCE_ERROR\";\n\t    }\n\t    throw err;\n\t  }\n\t  const expressionAST = ast.program.body[0].expression;\n\t  _index.default.removeProperties(expressionAST);\n\t  return this.replaceWith(expressionAST);\n\t}\n\tfunction replaceWith(replacementPath) {\n\t  _context.resync.call(this);\n\t  if (this.removed) {\n\t    throw new Error(\"You can't replace this node, we've already removed it\");\n\t  }\n\t  let replacement = replacementPath instanceof _index2.default ? replacementPath.node : replacementPath;\n\t  if (!replacement) {\n\t    throw new Error(\"You passed `path.replaceWith()` a falsy node, use `path.remove()` instead\");\n\t  }\n\t  if (this.node === replacement) {\n\t    return [this];\n\t  }\n\t  if (this.isProgram() && !isProgram(replacement)) {\n\t    throw new Error(\"You can only replace a Program root node with another Program node\");\n\t  }\n\t  if (Array.isArray(replacement)) {\n\t    throw new Error(\"Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`\");\n\t  }\n\t  if (typeof replacement === \"string\") {\n\t    throw new Error(\"Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`\");\n\t  }\n\t  let nodePath = \"\";\n\t  if (this.isNodeType(\"Statement\") && isExpression(replacement)) {\n\t    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement) && !this.parentPath.isExportDefaultDeclaration()) {\n\t      replacement = expressionStatement(replacement);\n\t      nodePath = \"expression\";\n\t    }\n\t  }\n\t  if (this.isNodeType(\"Expression\") && isStatement(replacement)) {\n\t    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement)) {\n\t      return this.replaceExpressionWithStatements([replacement]);\n\t    }\n\t  }\n\t  const oldNode = this.node;\n\t  if (oldNode) {\n\t    inheritsComments(replacement, oldNode);\n\t    removeComments(oldNode);\n\t  }\n\t  _replaceWith.call(this, replacement);\n\t  this.type = replacement.type;\n\t  _context.setScope.call(this);\n\t  this.requeue();\n\t  return [nodePath ? this.get(nodePath) : this];\n\t}\n\tfunction _replaceWith(node) {\n\t  var _getCachedPaths2;\n\t  if (!this.container) {\n\t    throw new ReferenceError(\"Container is falsy\");\n\t  }\n\t  if (this.inList) {\n\t    validate(this.parent, this.key, [node]);\n\t  } else {\n\t    validate(this.parent, this.key, node);\n\t  }\n\t  this.debug(`Replace with ${node == null ? void 0 : node.type}`);\n\t  (_getCachedPaths2 = (0, _cache.getCachedPaths)(this.hub, this.parent)) == null || _getCachedPaths2.set(node, this).delete(this.node);\n\t  this.node = this.container[this.key] = node;\n\t}\n\tfunction replaceExpressionWithStatements(nodes) {\n\t  _context.resync.call(this);\n\t  const declars = [];\n\t  const nodesAsSingleExpression = gatherSequenceExpressions(nodes, declars);\n\t  if (nodesAsSingleExpression) {\n\t    for (const id of declars) this.scope.push({\n\t      id\n\t    });\n\t    return this.replaceWith(nodesAsSingleExpression)[0].get(\"expressions\");\n\t  }\n\t  const functionParent = this.getFunctionParent();\n\t  const isParentAsync = functionParent == null ? void 0 : functionParent.node.async;\n\t  const isParentGenerator = functionParent == null ? void 0 : functionParent.node.generator;\n\t  const container = arrowFunctionExpression([], blockStatement(nodes));\n\t  this.replaceWith(callExpression(container, []));\n\t  const callee = this.get(\"callee\");\n\t  callee.get(\"body\").scope.hoistVariables(id => this.scope.push({\n\t    id\n\t  }));\n\t  const completionRecords = callee.getCompletionRecords();\n\t  for (const path of completionRecords) {\n\t    if (!path.isExpressionStatement()) continue;\n\t    const loop = path.findParent(path => path.isLoop());\n\t    if (loop) {\n\t      let uid = loop.getData(\"expressionReplacementReturnUid\");\n\t      if (!uid) {\n\t        uid = callee.scope.generateDeclaredUidIdentifier(\"ret\");\n\t        callee.get(\"body\").pushContainer(\"body\", returnStatement(cloneNode(uid)));\n\t        loop.setData(\"expressionReplacementReturnUid\", uid);\n\t      } else {\n\t        uid = identifier(uid.name);\n\t      }\n\t      path.get(\"expression\").replaceWith(assignmentExpression(\"=\", cloneNode(uid), path.node.expression));\n\t    } else {\n\t      path.replaceWith(returnStatement(path.node.expression));\n\t    }\n\t  }\n\t  callee.arrowFunctionToExpression();\n\t  const newCallee = callee;\n\t  const needToAwaitFunction = isParentAsync && _index.default.hasType(this.get(\"callee.body\").node, \"AwaitExpression\", FUNCTION_TYPES);\n\t  const needToYieldFunction = isParentGenerator && _index.default.hasType(this.get(\"callee.body\").node, \"YieldExpression\", FUNCTION_TYPES);\n\t  if (needToAwaitFunction) {\n\t    newCallee.set(\"async\", true);\n\t    if (!needToYieldFunction) {\n\t      this.replaceWith(awaitExpression(this.node));\n\t    }\n\t  }\n\t  if (needToYieldFunction) {\n\t    newCallee.set(\"generator\", true);\n\t    this.replaceWith(yieldExpression(this.node, true));\n\t  }\n\t  return newCallee.get(\"body.body\");\n\t}\n\tfunction gatherSequenceExpressions(nodes, declars) {\n\t  const exprs = [];\n\t  let ensureLastUndefined = true;\n\t  for (const node of nodes) {\n\t    if (!isEmptyStatement(node)) {\n\t      ensureLastUndefined = false;\n\t    }\n\t    if (isExpression(node)) {\n\t      exprs.push(node);\n\t    } else if (isExpressionStatement(node)) {\n\t      exprs.push(node.expression);\n\t    } else if (isVariableDeclaration(node)) {\n\t      if (node.kind !== \"var\") return;\n\t      for (const declar of node.declarations) {\n\t        const bindings = getBindingIdentifiers(declar);\n\t        for (const key of Object.keys(bindings)) {\n\t          declars.push(cloneNode(bindings[key]));\n\t        }\n\t        if (declar.init) {\n\t          exprs.push(assignmentExpression(\"=\", declar.id, declar.init));\n\t        }\n\t      }\n\t      ensureLastUndefined = true;\n\t    } else if (isIfStatement(node)) {\n\t      const consequent = node.consequent ? gatherSequenceExpressions([node.consequent], declars) : buildUndefinedNode();\n\t      const alternate = node.alternate ? gatherSequenceExpressions([node.alternate], declars) : buildUndefinedNode();\n\t      if (!consequent || !alternate) return;\n\t      exprs.push(conditionalExpression(node.test, consequent, alternate));\n\t    } else if (isBlockStatement(node)) {\n\t      const body = gatherSequenceExpressions(node.body, declars);\n\t      if (!body) return;\n\t      exprs.push(body);\n\t    } else if (isEmptyStatement(node)) {\n\t      if (nodes.indexOf(node) === 0) {\n\t        ensureLastUndefined = true;\n\t      }\n\t    } else {\n\t      return;\n\t    }\n\t  }\n\t  if (ensureLastUndefined) exprs.push(buildUndefinedNode());\n\t  if (exprs.length === 1) {\n\t    return exprs[0];\n\t  } else {\n\t    return sequenceExpression(exprs);\n\t  }\n\t}\n\tfunction replaceInline(nodes) {\n\t  _context.resync.call(this);\n\t  if (Array.isArray(nodes)) {\n\t    if (Array.isArray(this.container)) {\n\t      nodes = _modification._verifyNodeList.call(this, nodes);\n\t      const paths = _modification._containerInsertAfter.call(this, nodes);\n\t      this.remove();\n\t      return paths;\n\t    } else {\n\t      return this.replaceWithMultiple(nodes);\n\t    }\n\t  } else {\n\t    return this.replaceWith(nodes);\n\t  }\n\t}\n\n\t//# sourceMappingURL=replacement.js.map\n\treturn replacement;\n}\n\nexport { requireReplacement as __require };",
      "start": 1728160681165,
      "end": 1728160682819,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "inject",
      "start": 1728160682819,
      "end": 1728160682819,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1728160682820,
      "end": 1728160682820,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1728160682820,
      "end": 1728160682820,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1728160682820,
      "end": 1728160682820,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1728160682820,
      "end": 1728160682820,
      "order": "normal"
    }
  ]
}
