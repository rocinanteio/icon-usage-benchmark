{
  "resolvedId": "/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/template/lib/parse.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\nvar _t = require(\"@babel/types\");\nvar _parser = require(\"@babel/parser\");\nvar _codeFrame = require(\"@babel/code-frame\");\nconst {\n  isCallExpression,\n  isExpressionStatement,\n  isFunction,\n  isIdentifier,\n  isJSXIdentifier,\n  isNewExpression,\n  isPlaceholder,\n  isStatement,\n  isStringLiteral,\n  removePropertiesDeep,\n  traverse\n} = _t;\nconst PATTERN = /^[_$A-Z0-9]+$/;\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const state = {\n    syntactic: {\n      placeholders: [],\n      placeholderNames: new Set()\n    },\n    legacy: {\n      placeholders: [],\n      placeholderNames: new Set()\n    },\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  };\n  traverse(ast, placeholderVisitorHandler, state);\n  return Object.assign({\n    ast\n  }, state.syntactic.placeholders.length ? state.syntactic : state.legacy);\n}\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n  let name;\n  let hasSyntacticPlaceholders = state.syntactic.placeholders.length > 0;\n  if (isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    }\n    name = node.name.name;\n    hasSyntacticPlaceholders = true;\n  } else if (hasSyntacticPlaceholders || state.syntacticPlaceholders) {\n    return;\n  } else if (isIdentifier(node) || isJSXIdentifier(node)) {\n    name = node.name;\n  } else if (isStringLiteral(node)) {\n    name = node.value;\n  } else {\n    return;\n  }\n  if (hasSyntacticPlaceholders && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n  if (!hasSyntacticPlaceholders && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) != null && _state$placeholderWhi.has(name))) {\n    return;\n  }\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n  if (isStringLiteral(node) || isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (isNewExpression(parent) && key === \"arguments\" || isCallExpression(parent) && key === \"arguments\" || isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (isExpressionStatement(parent) && !isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (isStatement(node) && isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n  const {\n    placeholders,\n    placeholderNames\n  } = !hasSyntacticPlaceholders ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n    throw err;\n  }\n}\n\n//# sourceMappingURL=parse.js.map\n",
      "start": 1728160682008,
      "end": 1728160682253,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1728160682253,
      "end": 1728160682253,
      "order": "pre"
    },
    {
      "name": "optimus-bundle",
      "start": 1728160682253,
      "end": 1728160682253,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1728160682253,
      "end": 1728160682253,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1728160682253,
      "end": 1728160682253,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1728160682253,
      "end": 1728160682253,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1728160682253,
      "end": 1728160682253,
      "order": "normal"
    },
    {
      "name": "vite-plugin-commonjs",
      "start": 1728160682253,
      "end": 1728160682253,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1728160682253,
      "end": 1728160682253,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1728160682253,
      "end": 1728160682253,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1728160682253,
      "end": 1728160682253,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1728160682253,
      "end": 1728160682253,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1728160682253,
      "end": 1728160682253,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as parse } from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/template/lib/parse.js?commonjs-exports\";\nimport { __require as require$$0 } from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/types/lib/index.js?commonjs-wrapped\";\nimport require$$1 from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/parser/lib/index.js?commonjs-proxy\";\nimport require$$2 from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/code-frame/lib/index.js?commonjs-proxy\";\n\n\"use strict\";\n\nObject.defineProperty(parse, \"__esModule\", {\n  value: true\n});\nvar _default = parse.default = parseAndBuildMetadata;\nvar _t = require$$0();\nvar _parser = require$$1;\nvar _codeFrame = require$$2;\nconst {\n  isCallExpression,\n  isExpressionStatement,\n  isFunction,\n  isIdentifier,\n  isJSXIdentifier,\n  isNewExpression,\n  isPlaceholder,\n  isStatement,\n  isStringLiteral,\n  removePropertiesDeep,\n  traverse\n} = _t;\nconst PATTERN = /^[_$A-Z0-9]+$/;\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const state = {\n    syntactic: {\n      placeholders: [],\n      placeholderNames: new Set()\n    },\n    legacy: {\n      placeholders: [],\n      placeholderNames: new Set()\n    },\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  };\n  traverse(ast, placeholderVisitorHandler, state);\n  return Object.assign({\n    ast\n  }, state.syntactic.placeholders.length ? state.syntactic : state.legacy);\n}\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n  let name;\n  let hasSyntacticPlaceholders = state.syntactic.placeholders.length > 0;\n  if (isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    }\n    name = node.name.name;\n    hasSyntacticPlaceholders = true;\n  } else if (hasSyntacticPlaceholders || state.syntacticPlaceholders) {\n    return;\n  } else if (isIdentifier(node) || isJSXIdentifier(node)) {\n    name = node.name;\n  } else if (isStringLiteral(node)) {\n    name = node.value;\n  } else {\n    return;\n  }\n  if (hasSyntacticPlaceholders && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n  if (!hasSyntacticPlaceholders && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) != null && _state$placeholderWhi.has(name))) {\n    return;\n  }\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n  if (isStringLiteral(node) || isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (isNewExpression(parent) && key === \"arguments\" || isCallExpression(parent) && key === \"arguments\" || isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (isExpressionStatement(parent) && !isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (isStatement(node) && isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n  const {\n    placeholders,\n    placeholderNames\n  } = !hasSyntacticPlaceholders ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n    throw err;\n  }\n}\n\n//# sourceMappingURL=parse.js.map\n\nexport { parse as __moduleExports, _default as default };",
      "start": 1728160682254,
      "end": 1728160682819,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "inject",
      "start": 1728160682819,
      "end": 1728160682820,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1728160682820,
      "end": 1728160682820,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1728160682820,
      "end": 1728160682820,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1728160682820,
      "end": 1728160682820,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1728160682820,
      "end": 1728160682820,
      "order": "normal"
    }
  ]
}
