{
  "resolvedId": "/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/generator/lib/generators/template-literals.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TaggedTemplateExpression = TaggedTemplateExpression;\nexports.TemplateElement = TemplateElement;\nexports.TemplateLiteral = TemplateLiteral;\nfunction TaggedTemplateExpression(node) {\n  this.print(node.tag);\n  this.print(node.typeParameters);\n  this.print(node.quasi);\n}\nfunction TemplateElement() {\n  throw new Error(\"TemplateElement printing is handled in TemplateLiteral\");\n}\nfunction TemplateLiteral(node) {\n  const quasis = node.quasis;\n  let partRaw = \"`\";\n  for (let i = 0; i < quasis.length; i++) {\n    partRaw += quasis[i].value.raw;\n    if (i + 1 < quasis.length) {\n      this.token(partRaw + \"${\", true);\n      this.print(node.expressions[i]);\n      partRaw = \"}\";\n    }\n  }\n  this.token(partRaw + \"`\", true);\n}\n\n//# sourceMappingURL=template-literals.js.map\n",
      "start": 1727785257117,
      "end": 1727785257147,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1727785257147,
      "end": 1727785257147,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1727785257147,
      "end": 1727785257147,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1727785257147,
      "end": 1727785257147,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1727785257147,
      "end": 1727785257147,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1727785257147,
      "end": 1727785257147,
      "order": "normal"
    },
    {
      "name": "vite-plugin-commonjs",
      "start": 1727785257147,
      "end": 1727785257147,
      "order": "normal"
    },
    {
      "name": "optimus-bundle",
      "start": 1727785257147,
      "end": 1727785257147,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1727785257147,
      "end": 1727785257147,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1727785257147,
      "end": 1727785257147,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1727785257147,
      "end": 1727785257147,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1727785257147,
      "end": 1727785257147,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1727785257147,
      "end": 1727785257147,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as templateLiterals } from \"\\u0000/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/@babel/generator/lib/generators/template-literals.js?commonjs-exports\";\n\n\"use strict\";\n\nObject.defineProperty(templateLiterals, \"__esModule\", {\n  value: true\n});\nvar TaggedTemplateExpression_1 = templateLiterals.TaggedTemplateExpression = TaggedTemplateExpression;\nvar TemplateElement_1 = templateLiterals.TemplateElement = TemplateElement;\nvar TemplateLiteral_1 = templateLiterals.TemplateLiteral = TemplateLiteral;\nfunction TaggedTemplateExpression(node) {\n  this.print(node.tag);\n  this.print(node.typeParameters);\n  this.print(node.quasi);\n}\nfunction TemplateElement() {\n  throw new Error(\"TemplateElement printing is handled in TemplateLiteral\");\n}\nfunction TemplateLiteral(node) {\n  const quasis = node.quasis;\n  let partRaw = \"`\";\n  for (let i = 0; i < quasis.length; i++) {\n    partRaw += quasis[i].value.raw;\n    if (i + 1 < quasis.length) {\n      this.token(partRaw + \"${\", true);\n      this.print(node.expressions[i]);\n      partRaw = \"}\";\n    }\n  }\n  this.token(partRaw + \"`\", true);\n}\n\n//# sourceMappingURL=template-literals.js.map\n\nexport { templateLiterals as __moduleExports, TaggedTemplateExpression_1 as TaggedTemplateExpression, TemplateElement_1 as TemplateElement, TemplateLiteral_1 as TemplateLiteral, templateLiterals as default };",
      "start": 1727785257147,
      "end": 1727785257147,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;AAAA,YAAY,CAAC;AACb;AACA,MAAM,CAAC,cAAc,CAAC,gBAAO,EAAE,YAAY,EAAE;AAC7C,EAAE,KAAK,EAAE,IAAI;AACb,CAAC,CAAC,CAAC;AACH,0EAAgC,GAAG,wBAAwB,CAAC;AAC5D,wDAAuB,GAAG,eAAe,CAAC;AAC1C,wDAAuB,GAAG,eAAe,CAAC;AAC1C,SAAS,wBAAwB,CAAC,IAAI,EAAE;AACxC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACvB,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAClC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACzB,CAAC;AACD,SAAS,eAAe,GAAG;AAC3B,EAAE,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;AAC5E,CAAC;AACD,SAAS,eAAe,CAAC,IAAI,EAAE;AAC/B,EAAE,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC7B,EAAE,IAAI,OAAO,GAAG,GAAG,CAAC;AACpB,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,IAAI,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;AACnC,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE;AAC/B,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,EAAE,IAAI,CAAC,CAAC;AACvC,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,MAAM,OAAO,GAAG,GAAG,CAAC;AACpB,KAAK;AACL,GAAG;AACH,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;AAClC,CAAC;AACD;AACA"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1727785257147,
      "end": 1727785257147,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1727785257147,
      "end": 1727785257147,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1727785257147,
      "end": 1727785257147,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1727785257147,
      "end": 1727785257147,
      "order": "normal"
    }
  ]
}
