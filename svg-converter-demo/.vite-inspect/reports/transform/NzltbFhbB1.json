{
  "resolvedId": "/Users/ibrahim.dagdelen/Projects/Github/icon-converter-demo/node_modules/to-fast-properties/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict';\n\nlet fastProto = null;\n\n// Creates an object with permanently fast properties in V8. See Toon Verwaest's\n// post https://medium.com/@tverwaes/setting-up-prototypes-in-v8-ec9c9491dfe2#5f62\n// for more details. Use %HasFastProperties(object) and the Node.js flag\n// --allow-natives-syntax to check whether an object has fast properties.\nfunction FastObject(o) {\n\t// A prototype object will have \"fast properties\" enabled once it is checked\n\t// against the inline property cache of a function, e.g. fastProto.property:\n\t// https://github.com/v8/v8/blob/6.0.122/test/mjsunit/fast-prototype.js#L48-L63\n\tif (fastProto !== null && typeof fastProto.property) {\n\t\tconst result = fastProto;\n\t\tfastProto = FastObject.prototype = null;\n\t\treturn result;\n\t}\n\tfastProto = FastObject.prototype = o == null ? Object.create(null) : o;\n\treturn new FastObject;\n}\n\n// Initialize the inline property cache of FastObject\nFastObject();\n\nmodule.exports = function toFastproperties(o) {\n\treturn FastObject(o);\n};\n",
      "start": 1728160681151,
      "end": 1728160681242,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1728160681242,
      "end": 1728160681242,
      "order": "pre"
    },
    {
      "name": "optimus-bundle",
      "start": 1728160681242,
      "end": 1728160681242,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1728160681242,
      "end": 1728160681242,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1728160681242,
      "end": 1728160681243,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1728160681243,
      "end": 1728160681243,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1728160681243,
      "end": 1728160681243,
      "order": "normal"
    },
    {
      "name": "vite-plugin-commonjs",
      "start": 1728160681243,
      "end": 1728160681243,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1728160681243,
      "end": 1728160681243,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1728160681243,
      "end": 1728160681243,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1728160681243,
      "end": 1728160681243,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1728160681243,
      "end": 1728160681243,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1728160681243,
      "end": 1728160681243,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\n'use strict';\n\nlet fastProto = null;\n\n// Creates an object with permanently fast properties in V8. See Toon Verwaest's\n// post https://medium.com/@tverwaes/setting-up-prototypes-in-v8-ec9c9491dfe2#5f62\n// for more details. Use %HasFastProperties(object) and the Node.js flag\n// --allow-natives-syntax to check whether an object has fast properties.\nfunction FastObject(o) {\n\t// A prototype object will have \"fast properties\" enabled once it is checked\n\t// against the inline property cache of a function, e.g. fastProto.property:\n\t// https://github.com/v8/v8/blob/6.0.122/test/mjsunit/fast-prototype.js#L48-L63\n\tif (fastProto !== null && typeof fastProto.property) {\n\t\tconst result = fastProto;\n\t\tfastProto = FastObject.prototype = null;\n\t\treturn result;\n\t}\n\tfastProto = FastObject.prototype = o == null ? Object.create(null) : o;\n\treturn new FastObject;\n}\n\n// Initialize the inline property cache of FastObject\nFastObject();\n\nvar toFastProperties = function toFastproperties(o) {\n\treturn FastObject(o);\n};\n\nexport default /*@__PURE__*/commonjsHelpers.getDefaultExportFromCjs(toFastProperties);\nexport { toFastProperties as __moduleExports };",
      "start": 1728160681243,
      "end": 1728160681243,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;AAAA,YAAY,CAAC;AACb;AACA,IAAI,SAAS,GAAG,IAAI,CAAC;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,CAAC,CAAC,EAAE;AACvB;AACA;AACA;AACA,CAAC,IAAI,SAAS,KAAK,IAAI,IAAI,OAAO,SAAS,CAAC,QAAQ,EAAE;AACtD,EAAE,MAAM,MAAM,GAAG,SAAS,CAAC;AAC3B,EAAE,SAAS,GAAG,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC;AAC1C,EAAE,OAAO,MAAM,CAAC;AAChB,EAAE;AACF,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,GAAG,CAAC,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACxE,CAAC,OAAO,IAAI,UAAU,CAAC;AACvB,CAAC;AACD;AACA;AACA,UAAU,EAAE,CAAC;AACb;IACA,gBAAc,GAAG,SAAS,gBAAgB,CAAC,CAAC,EAAE;AAC9C,CAAC,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC"
      }
    },
    {
      "name": "inject",
      "start": 1728160681243,
      "end": 1728160681243,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1728160681243,
      "end": 1728160681244,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1728160681244,
      "end": 1728160681244,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1728160681244,
      "end": 1728160681244,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1728160681244,
      "end": 1728160681244,
      "order": "normal"
    }
  ]
}
